set shell=/bin/zsh
set nocompatible              " be iMproved, required
filetype off                  " required
set spell spelllang=en_us
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'dpelle/vim-LanguageTool'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'tomlion/vim-solidity'
Plugin 'lervag/vimtex'
" Display directory tree
Plugin 'preservim/nerdtree'
"c++ ide"
""Plugin 'JBakamovic/yavide'
" C++ Plugin
Plugin 'octol/vim-cpp-enhanced-highlight'
" Tags
Plugin 'majutsushi/tagbar'
Plugin 'benmills/vimux'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
: set number
: set cursorline
: set modifiable
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O
nmap <F8> :TagbarToggle<CR>

" OPTIONAL: This enables automatic indentation as you type.
filetype indent on
let g:tex_flavor="latex"
let g:languagetool_jar='$HOME/.vim/LanguageTool-4.3/languagetool-commandline.jar'
let g:languagetool_lang='en-US'
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_posix_standard = 1
let g:cpp_experimental_simple_template_highlight = 1
let g:cpp_concepts_highlight = 1
let g:cpp_no_function_highlight = 1
    " Always run split-window instead of using nearest pane
let VimuxUseNearest = 0
    " Use last pane as runner
let g:VimuxUseLast = 1

let mapleader=","
